A videoStore feladat folytatása (update, find, projection)

Normalization elve: Csak a közvetlen összetartozó elemeket tároljuk egy táblázatban (listában). 
Minél összetettebb egy adat (több tulajdonsággal rendelkezhet, pl.: rendezőnek lehet neve, díjai, filmjei, születési adatai), 
annál inkább külön listába kell kiszervezni a tárolását.

1. Készíts el egy „directors” listát, amelyben filmrendezőket fogunk tárolni!
use videoStore
db.createCollection("directors")

2. Ments el benne 3 „rendező” dokumentumot az insertOne() parancs segítségével:
"_id": egész szám 1-estől indulva
"name": Steven Spielberg, Clint Eastwood, James Cameron
"birthYear": születési év (tetszőlegesen megadott egész szám)
"movies": kezdetben egy üres lista

db.directors.insertOne({_id: 1, name: "Steven Spielberg", birthYear: "1946", movies: []})
db.directors.insertOne({_id: 2, name: "Clint Eastwood", birthYear: "1930", movies: []})
db.directors.insertOne({_id: 3, name: "James Cameron", birthYear: "1954", movies: []})


4. Frissítsd a rendezők dokumentumait, helyezd el a „movies” listájukba a megfelelő filmek 
id-jait 
(ha ObjectId-t használsz, akkor figyelj arra, hogy ObjectId-ként mentsd el őket). 
Tipp: kérdezd le a rendezőket, és alájuk listázd a filmeket úgy, hogy csak az id-jük 
és a rendező nevét adja vissza a lekérdezés:
A képen szöveg látható  Automatikusan generált leírás
db.directors.updateOne({name: "Steven Spielberg"}, {$push: {movies: {$each: [ObjectId("60dcb218bb421963791a3219"),ObjectId("60dcb218bb421963791a321c"),ObjectId("60dcb218bb421963791a321f")]}}})
db.directors.updateOne({name: "Clint Eastwood"}, {$push: {movies: {$each: [ObjectId("60dcb218bb421963791a3218"),ObjectId("60dcb218bb421963791a321b"),ObjectId("60dcb218bb421963791a321e")]}}})
db.directors.updateOne({name: "James Cameron"}, {$push: {movies: {$each: [ObjectId("60dcb218bb421963791a3217"),ObjectId("60dcb218bb421963791a321a"),ObjectId("60dcb218bb421963791a321d"),ObjectId("60dcb218bb421963791a3220")]}}})


5. Ha frissítetted a rendezőket, ellenőrzés gyanánt kérdezd le a dokumentumokat a „directors” listából 
(használd a pretty() metódust a szebb megjelenítéshez)! Ehhez hasonló eredményt kell látnod:
A képen szöveg látható  Automatikusan generált leírás
db.directors.find().pretty()

6. Ha elkészültél a rendezői listával, frissítsd a movies listát („táblázatot”): 
távolítsd el a director mezőt ($unset operátor segítségével). Ezentúl a rendezőn keresztül 
fogjuk elérni a hozzájuk tartozó filmeket.
db.movies.updateMany({}, {$unset: {director: 0}})

7. Kérdezd le az egy bizonyos év előtt készült filmeket, majd az egy bizonyos év után készült filmeket! 
($gt, $gte, $lt, $lte)
db.movies.find({releaseYear: {$gte: 1994}})
db.movies.find({releaseYear: {$lte: 1994}})

8. Kérdezz le két év között készült filmeket! (Próbáld ki $and operátorral is!)
db.movies.find({releaseYear: {$gt: 1970}, releaseYear: {$lt: 1990}})
db.movies.find({$and: [{releaseYear: {$gte: 1970}}, {releaseYear: {$lte: 1990}}]})

9. Kérdezz le két év közötti filmeket, amelyek egy bizonyos kategóriával rendelkeznek!
db.movies.find({$and: [{releaseYear: {$gt: 1970, $lt: 2010}}, {category: "ACTION"}]})

10. Kérdezd le a filmeket, amelyeknek a kategóriája NEM FANTASY ($ne)!
db.movies.find({category: {$ne: "FANTASY"}})



